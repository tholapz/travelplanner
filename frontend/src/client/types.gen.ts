// This file is auto-generated by @hey-api/openapi-ts

export type AffiliateLinkPublic = {
    link_code: string;
    id: string;
    template_id: string;
    creator_id: string;
    clicks: number;
    conversions: number;
    revenue_generated: number;
    created_at: string;
};

export type AffiliateLinksPublic = {
    data: Array<AffiliateLinkPublic>;
    count: number;
};

export type Body_login_login_access_token = {
    grant_type?: (string | null);
    username: string;
    password: string;
    scope?: string;
    client_id?: (string | null);
    client_secret?: (string | null);
};

export type CreatorCreate = {
    username: string;
    display_name: string;
    bio?: (string | null);
    profile_image_url?: (string | null);
    commission_rate?: number;
    social_media_links?: ({
    [key: string]: unknown;
} | null);
    payout_info?: ({
    [key: string]: unknown;
} | null);
};

export type CreatorPublic = {
    username: string;
    display_name: string;
    bio?: (string | null);
    profile_image_url?: (string | null);
    commission_rate?: number;
    id: string;
    user_id: string;
    status: CreatorStatus;
    social_media_links: ({
    [key: string]: unknown;
} | null);
    created_at: string;
};

export type CreatorStatus = 'pending' | 'active' | 'suspended';

export type CreatorUpdate = {
    username?: (string | null);
    display_name?: (string | null);
    bio?: (string | null);
    profile_image_url?: (string | null);
    social_media_links?: ({
    [key: string]: unknown;
} | null);
    payout_info?: ({
    [key: string]: unknown;
} | null);
    commission_rate?: (number | null);
};

export type HTTPValidationError = {
    detail?: Array<ValidationError>;
};

export type ItemCreate = {
    title: string;
    description?: (string | null);
};

export type ItemPublic = {
    title: string;
    description?: (string | null);
    id: string;
    owner_id: string;
};

export type ItemsPublic = {
    data: Array<ItemPublic>;
    count: number;
};

export type ItemUpdate = {
    title?: (string | null);
    description?: (string | null);
};

export type Message = {
    message: string;
};

export type NewPassword = {
    token: string;
    new_password: string;
};

export type PrivateUserCreate = {
    email: string;
    password: string;
    full_name: string;
    is_verified?: boolean;
};

export type TemplateStatus = 'draft' | 'published' | 'archived';

export type Token = {
    access_token: string;
    token_type?: string;
};

export type TripTemplateCreate = {
    title: string;
    description: string;
    creator_notes?: (string | null);
    /**
     * Immutable core experience data
     */
    core_experience: {
        [key: string]: unknown;
    };
    /**
     * Customizable logistics options
     */
    flexible_logistics: {
        [key: string]: unknown;
    };
    affiliate_settings?: ({
    [key: string]: unknown;
} | null);
};

export type TripTemplatePublic = {
    title: string;
    description: string;
    creator_notes?: (string | null);
    id: string;
    creator_id: string;
    core_experience: {
        [key: string]: unknown;
    };
    flexible_logistics: {
        [key: string]: unknown;
    };
    status: TemplateStatus;
    views_count: number;
    created_at: string;
    creator?: (CreatorPublic | null);
};

export type TripTemplatesPublic = {
    data: Array<TripTemplatePublic>;
    count: number;
};

export type TripTemplateUpdate = {
    title?: (string | null);
    description?: (string | null);
    creator_notes?: (string | null);
    core_experience?: ({
    [key: string]: unknown;
} | null);
    flexible_logistics?: ({
    [key: string]: unknown;
} | null);
    affiliate_settings?: ({
    [key: string]: unknown;
} | null);
};

export type UpdatePassword = {
    current_password: string;
    new_password: string;
};

export type UserCreate = {
    email: string;
    is_active?: boolean;
    is_superuser?: boolean;
    full_name?: (string | null);
    password: string;
};

export type UserPublic = {
    email: string;
    is_active?: boolean;
    is_superuser?: boolean;
    full_name?: (string | null);
    id: string;
};

export type UserRegister = {
    email: string;
    password: string;
    full_name?: (string | null);
};

export type UsersPublic = {
    data: Array<UserPublic>;
    count: number;
};

export type UserUpdate = {
    email?: (string | null);
    is_active?: boolean;
    is_superuser?: boolean;
    full_name?: (string | null);
    password?: (string | null);
};

export type UserUpdateMe = {
    full_name?: (string | null);
    email?: (string | null);
};

export type ValidationError = {
    loc: Array<(string | number)>;
    msg: string;
    type: string;
};

export type CreatorsCreateCreatorProfileData = {
    requestBody: CreatorCreate;
};

export type CreatorsCreateCreatorProfileResponse = (CreatorPublic);

export type CreatorsGetMyCreatorProfileResponse = (CreatorPublic);

export type CreatorsUpdateMyCreatorProfileData = {
    requestBody: CreatorUpdate;
};

export type CreatorsUpdateMyCreatorProfileResponse = (CreatorPublic);

export type CreatorsGetMyTemplatesData = {
    limit?: number;
    skip?: number;
};

export type CreatorsGetMyTemplatesResponse = (TripTemplatesPublic);

export type CreatorsCreateTripTemplateData = {
    requestBody: TripTemplateCreate;
};

export type CreatorsCreateTripTemplateResponse = (TripTemplatePublic);

export type CreatorsGetMyTemplateData = {
    templateId: string;
};

export type CreatorsGetMyTemplateResponse = (TripTemplatePublic);

export type CreatorsUpdateMyTemplateData = {
    requestBody: TripTemplateUpdate;
    templateId: string;
};

export type CreatorsUpdateMyTemplateResponse = (TripTemplatePublic);

export type CreatorsDeleteMyTemplateData = {
    templateId: string;
};

export type CreatorsDeleteMyTemplateResponse = (Message);

export type CreatorsPublishTemplateData = {
    templateId: string;
};

export type CreatorsPublishTemplateResponse = (TripTemplatePublic);

export type CreatorsCreateAffiliateLinkData = {
    templateId: string;
};

export type CreatorsCreateAffiliateLinkResponse = (AffiliateLinkPublic);

export type CreatorsGetMyAffiliateLinksData = {
    limit?: number;
    skip?: number;
};

export type CreatorsGetMyAffiliateLinksResponse = (AffiliateLinksPublic);

export type ItemsReadItemsData = {
    limit?: number;
    skip?: number;
};

export type ItemsReadItemsResponse = (ItemsPublic);

export type ItemsCreateItemData = {
    requestBody: ItemCreate;
};

export type ItemsCreateItemResponse = (ItemPublic);

export type ItemsReadItemData = {
    id: string;
};

export type ItemsReadItemResponse = (ItemPublic);

export type ItemsUpdateItemData = {
    id: string;
    requestBody: ItemUpdate;
};

export type ItemsUpdateItemResponse = (ItemPublic);

export type ItemsDeleteItemData = {
    id: string;
};

export type ItemsDeleteItemResponse = (Message);

export type LoginLoginAccessTokenData = {
    formData: Body_login_login_access_token;
};

export type LoginLoginAccessTokenResponse = (Token);

export type LoginTestTokenResponse = (UserPublic);

export type LoginRecoverPasswordData = {
    email: string;
};

export type LoginRecoverPasswordResponse = (Message);

export type LoginResetPasswordData = {
    requestBody: NewPassword;
};

export type LoginResetPasswordResponse = (Message);

export type LoginRecoverPasswordHtmlContentData = {
    email: string;
};

export type LoginRecoverPasswordHtmlContentResponse = (string);

export type PrivateCreateUserData = {
    requestBody: PrivateUserCreate;
};

export type PrivateCreateUserResponse = (UserPublic);

export type TemplatesDiscoverTemplatesData = {
    /**
     * Filter by category
     */
    category?: (string | null);
    limit?: number;
    /**
     * Maximum duration in days
     */
    maxDuration?: (number | null);
    /**
     * Minimum duration in days
     */
    minDuration?: (number | null);
    /**
     * Search in title and description
     */
    search?: (string | null);
    skip?: number;
};

export type TemplatesDiscoverTemplatesResponse = (TripTemplatesPublic);

export type TemplatesGetTemplateData = {
    templateId: string;
};

export type TemplatesGetTemplateResponse = (TripTemplatePublic);

export type TemplatesGetTemplateByAffiliateData = {
    linkCode: string;
};

export type TemplatesGetTemplateByAffiliateResponse = (TripTemplatePublic);

export type UsersReadUsersData = {
    limit?: number;
    skip?: number;
};

export type UsersReadUsersResponse = (UsersPublic);

export type UsersCreateUserData = {
    requestBody: UserCreate;
};

export type UsersCreateUserResponse = (UserPublic);

export type UsersReadUserMeResponse = (UserPublic);

export type UsersDeleteUserMeResponse = (Message);

export type UsersUpdateUserMeData = {
    requestBody: UserUpdateMe;
};

export type UsersUpdateUserMeResponse = (UserPublic);

export type UsersUpdatePasswordMeData = {
    requestBody: UpdatePassword;
};

export type UsersUpdatePasswordMeResponse = (Message);

export type UsersRegisterUserData = {
    requestBody: UserRegister;
};

export type UsersRegisterUserResponse = (UserPublic);

export type UsersReadUserByIdData = {
    userId: string;
};

export type UsersReadUserByIdResponse = (UserPublic);

export type UsersUpdateUserData = {
    requestBody: UserUpdate;
    userId: string;
};

export type UsersUpdateUserResponse = (UserPublic);

export type UsersDeleteUserData = {
    userId: string;
};

export type UsersDeleteUserResponse = (Message);

export type UtilsTestEmailData = {
    emailTo: string;
};

export type UtilsTestEmailResponse = (Message);

export type UtilsHealthCheckResponse = (boolean);